[versions]
# Versões do seu KMP Template (mantidas ou ajustadas)
agp = "8.10.0"  # Versão do Android Gradle Plugin
kotlin = "2.0.0"  # Versão do Kotlin
composeCompiler = "2.0.0" # Versão do Compose Compiler Plugin (geralmente alinhada com Kotlin)
compose = "1.6.7" # Versão do Compose UI (ex: estável recente para Maio 2025, alinhar com BOM)
composeMaterial3 = "1.2.1" # Versão do Compose Material 3 (ex: estável recente)
androidxActivityCompose = "1.9.0" # Versão do Activity Compose (ex: estável recente)
kotlinPluginSerialization = "2.0.0" # Alinhado com Kotlin
kotlinxSerializationJson = "1.6.3" # Estável para Kotlinx Serialization
kotlinxCoroutines = "1.8.0" # Para Coroutines (usado em testes e ViewModels)

# Dependências adicionais baseadas no seu app original
lifecycle = "2.8.3" # Versão do Lifecycle (ViewModels, etc.)
navigationCompose = "2.7.7" # Navigation Compose
coreKtx = "1.13.1" # Core KTX
accompanistSystemuicontroller = "0.32.0" # Você já usava, verificar se ainda é a melhor opção ou se há alternativas no Compose Material
coilCompose = "2.6.0"
composeBom = "2024.06.00" # Compose Bill of Materials (BOM) - Use a última estável

# Para Testes (já adicionado)
junit4 = "4.13.2"
mockk = "1.13.10"
turbine = "1.1.0"


[libraries]
# KMP Test & Core
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" } # Para commonMain
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" } # Para androidApp

# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

# Compose (usando BOM)
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-ui = { module = "androidx.compose.ui:ui" } # Sem versão, virá do BOM
compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" } # M3 pode ter sua própria versão ou vir do BOM
androidx-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" } # Sem versão, idealmente viria do BOM ou compatível
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-ui-text = { group = "androidx.compose.ui", name = "ui-text"} # Adicionado

# Activity, Lifecycle & ViewModel
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivityCompose" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }

# Navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }

# Core KTX
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }

# Accompanist
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }

# Coil
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }

# UI Util (se ainda for usada)
androidx-ui-util = { group = "androidx.compose.ui", name = "ui-util"}

# Testes
junit4 = { group = "junit", name = "junit", version.ref = "junit4" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" } # Usando kotlinxCoroutines para versão
cash-turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
# Debug (para androidApp)
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinPluginSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinPluginSerialization" }
# O plugin do compilador Compose para KMP é org.jetbrains.compose, geralmente configurado no buildscript do shared module.
# Para o androidApp, o plugin kotlin("plugin.compose") ou alias(libs.plugins.compose.compiler) é usado.
# Vamos adicionar o plugin do compilador Compose aqui para ser usado pelo androidApp via alias.
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "composeCompiler" } # Usa a versão do Kotlin/Compose Compiler
jetbrainsCompose = { id = "org.jetbrains.compose", version = "1.6.10" } # Plugin Jetbrains Compose para o módulo shared (verifique a última)